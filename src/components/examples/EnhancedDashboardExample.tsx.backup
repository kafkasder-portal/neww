import React, { useState } from 'react'
import { 
  TrendingUp, 
  TrendingDown, 
  Users, 
  DollarSign, 
  Package, 
  FileText,
  MessageSquare,
  Calendar,
  BarChart3,
  PieChart,
  Activity,
  Settings,
  Plus,
  Search,
  Filter,
  Download,
  Eye
} from 'lucide-react'

import {
  CorporateCard,
  CorporateCardHeader,
  CorporateCardTitle,
  CorporateCardContent,
  KPICard,
  CorporateButton,
  CorporateTable,
  CorporateTableHeader,
  CorporateTableHeaderCell,
  CorporateTableRow,
  CorporateTableCell,
  CorporateBadge,
  CorporateSearch,
  CorporateModal,
  CorporateModalHeader,
  CorporateModalTitle,
  CorporateModalBody,
  CorporateModalFooter,
  CorporateAlert,
  CorporateProgress,
  CorporateEmptyState,
  QuickAccessCard,
  StatisticsCard,
  CorporateStatusIndicator,
  CorporateAvatar
} from '../ui/corporate/CorporateComponents'

// Mock data for demonstration
const mockKPIData = [
  {
    title: 'Toplam Bağış',
    value: '₺2,847,500',
    change: 12.5,
    changeType: 'increase' as const,
    period: 'Bu ay',
    icon: <DollarSign className="w-8 h-8" />
  },
  {
    title: 'Aktif Bağışçı',
    value: '1,247',
    change: 8.2,
    changeType: 'increase' as const,
    period: 'Bu ay',
    icon: <Users className="w-8 h-8" />
  },
  {
    title: 'Yardım Edilen',
    value: '3,456',
    change: -2.1,
    changeType: 'decrease' as const,
    period: 'Bu ay',
    icon: <Package className="w-8 h-8" />
  },
  {
    title: 'Bekleyen Başvuru',
    value: '89',
    change: 15.3,
    changeType: 'increase' as const,
    period: 'Bu hafta',
    icon: <FileText className="w-8 h-8" />
  }
]

const mockRecentDonations = [
  {
    id: 1,
    donor: 'Ahmet Yılmaz',
    amount: '₺5,000',
    type: 'Banka Transferi',
    status: 'completed',
    date: '2024-01-15'
  },
  {
    id: 2,
    donor: 'Fatma Demir',
    amount: '₺2,500',
    type: 'Kredi Kartı',
    status: 'pending',
    date: '2024-01-14'
  },
  {
    id: 3,
    donor: 'Mehmet Kaya',
    amount: '₺10,000',
    type: 'Nakit',
    status: 'completed',
    date: '2024-01-13'
  },
  {
    id: 4,
    donor: 'Ayşe Özkan',
    amount: '₺1,500',
    type: 'Banka Transferi',
    status: 'failed',
    date: '2024-01-12'
  }
]

const mockQuickActions = [
  {
    title: 'Yeni Başvuru',
    description: 'İhtiyaç sahibi başvurusu oluştur',
    icon: <FileText className="w-6 h-6" />,
    color: 'bg-brand-primary-600',
    link: '/aid/applications'
  },
  {
    title: 'Bağış Kabul',
    description: 'Yeni bağış kaydı oluştur',
    icon: <DollarSign className="w-6 h-6" />,
    color: 'bg-semantic-success',
    link: '/donations/cash'
  },
  {
    title: 'Mesaj Gönder',
    description: 'Toplu mesaj gönderimi yap',
    icon: <MessageSquare className="w-6 h-6" />,
    color: 'bg-brand-accent-500',
    link: '/messages/bulk-send'
  },
  {
    title: 'Rapor Oluştur',
    description: 'Yardım raporu hazırla',
    icon: <BarChart3 className="w-6 h-6" />,
    color: 'bg-brand-secondary-600',
    link: '/aid/reports'
  }
]

export function EnhancedDashboardExample() {
  const [showModal, setShowModal] = useState(false)
  const [searchTerm, setSearchTerm] = useState('')

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'completed':
        return <CorporateBadge variant="success">Tamamlandı</CorporateBadge>
      case 'pending':
        return <CorporateBadge variant="warning">Beklemede</CorporateBadge>
      case 'failed':
        return <CorporateBadge variant="danger">Başarısız</CorporateBadge>
      default:
        return <CorporateBadge variant="neutral">Bilinmiyor</CorporateBadge>
    }
  }

  return (
    <div className="dashboard-container">
      {/* Header Section */}
      <div className="dashboard-header">
        <div className="flex items-start justify-between">
          <div>
            <h1 className="dashboard-title">Hoş Geldiniz!</h1>
            <p className="dashboard-subtitle">
              Dernek finansal yönetim panelinize hoş geldiniz. Güncel durumu aşağıdan takip edebilirsiniz.
            </p>
          </div>
          <div className="flex items-center space-x-2">
            <CorporateButton
              variant="ghost"
              size="sm"
              className="text-white hover:bg-white/10"
            >
              <Settings className="w-4 h-4 mr-1" />
              Ayarlar
            </CorporateButton>
            <CorporateButton
              variant="ghost"
              size="sm"
              className="text-white hover:bg-white/10"
            >
              <Download className="w-4 h-4 mr-1" />
              Rapor
            </CorporateButton>
          </div>
        </div>
      </div>

      {/* KPI Cards */}
      <div className="corporate-grid-4">
        {mockKPIData.map((kpi, index) => (
          <KPICard
            key={index}
            title={kpi.title}
            value={kpi.value}
            change={kpi.change}
            changeType={kpi.changeType}
            period={kpi.period}
            icon={kpi.icon}
          />
        ))}
      </div>

      {/* Quick Access Cards */}
      <div className="corporate-grid-4">
        {mockQuickActions.map((action, index) => (
          <QuickAccessCard
            key={index}
            title={action.title}
            description={action.description}
            icon={action.icon}
            color={action.color}
            link={action.link}
          />
        ))}
      </div>

      {/* Main Content Grid */}
      <div className="corporate-grid-2">
        {/* Recent Donations */}
        <CorporateCard>
          <CorporateCardHeader>
            <CorporateCardTitle>Son Bağışlar</CorporateCardTitle>
            <CorporateButton
              variant="ghost"
              size="sm"
              onClick={() => setShowModal(true)}
            >
              <Eye className="w-4 h-4 mr-1" />
              Tümünü Gör
            </CorporateButton>
          </CorporateCardHeader>
          <CorporateCardContent>
            <CorporateTable>
              <CorporateTableHeader>
                <tr>
                  <CorporateTableHeaderCell>Bağışçı</CorporateTableHeaderCell>
                  <CorporateTableHeaderCell>Tutar</CorporateTableHeaderCell>
                  <CorporateTableHeaderCell>Tür</CorporateTableHeaderCell>
                  <CorporateTableHeaderCell>Durum</CorporateTableHeaderCell>
                  <CorporateTableHeaderCell>Tarih</CorporateTableHeaderCell>
                </tr>
              </CorporateTableHeader>
              <tbody>
                {mockRecentDonations.map((donation) => (
                  <CorporateTableRow key={donation.id}>
                    <CorporateTableCell>
                      <div className="flex items-center space-x-3">
                        <CorporateAvatar fallback={donation.donor.charAt(0)} />
                        <span className="font-medium">{donation.donor}</span>
                      </div>
                    </CorporateTableCell>
                    <CorporateTableCell className="font-semibold">
                      {donation.amount}
                    </CorporateTableCell>
                    <CorporateTableCell muted>
                      {donation.type}
                    </CorporateTableCell>
                    <CorporateTableCell>
                      {getStatusBadge(donation.status)}
                    </CorporateTableCell>
                    <CorporateTableCell muted>
                      {donation.date}
                    </CorporateTableCell>
                  </CorporateTableRow>
                ))}
              </tbody>
            </CorporateTable>
          </CorporateCardContent>
        </CorporateCard>

        {/* Activity Summary */}
        <CorporateCard>
          <CorporateCardHeader>
            <CorporateCardTitle>Aktivite Özeti</CorporateCardTitle>
            <CorporateStatusIndicator status="online" label="Sistem Aktif" />
          </CorporateCardHeader>
          <CorporateCardContent>
            <div className="space-y-6">
              {/* Progress Indicators */}
              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-neutral-700">Bağış Hedefi</span>
                  <span className="text-sm text-neutral-600">85%</span>
                </div>
                <CorporateProgress value={85} variant="success" />
              </div>

              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-neutral-700">Başvuru İşleme</span>
                  <span className="text-sm text-neutral-600">67%</span>
                </div>
                <CorporateProgress value={67} variant="warning" />
              </div>

              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-neutral-700">Sistem Performansı</span>
                  <span className="text-sm text-neutral-600">92%</span>
                </div>
                <CorporateProgress value={92} variant="success" />
              </div>

              {/* Statistics Cards */}
              <div className="corporate-grid-2">
                <StatisticsCard
                  number="156"
                  label="Bu Hafta Bağış"
                  change={12.5}
                  changeType="increase"
                  period="Geçen haftaya göre"
                />
                <StatisticsCard
                  number="89"
                  label="Bekleyen İşlem"
                  change={-5.2}
                  changeType="decrease"
                  period="Dünden"
                />
              </div>
            </div>
          </CorporateCardContent>
        </CorporateCard>
      </div>

      {/* Search and Filters Section */}
      <CorporateCard>
        <CorporateCardHeader>
          <CorporateCardTitle>Gelişmiş Arama</CorporateCardTitle>
          <div className="flex items-center space-x-2">
            <CorporateButton variant="secondary" size="sm">
              <Filter className="w-4 h-4 mr-1" />
              Filtrele
            </CorporateButton>
            <CorporateButton variant="primary" size="sm">
              <Plus className="w-4 h-4 mr-1" />
              Yeni Kayıt
            </CorporateButton>
          </div>
        </CorporateCardHeader>
        <CorporateCardContent>
          <div className="corporate-filters">
            <CorporateSearch
              placeholder="Bağışçı, tutar veya tarih ara..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
            <CorporateButton variant="secondary" size="sm">
              <Calendar className="w-4 h-4 mr-1" />
              Tarih Aralığı
            </CorporateButton>
            <CorporateButton variant="secondary" size="sm">
              <BarChart3 className="w-4 h-4 mr-1" />
              Analiz
            </CorporateButton>
          </div>
        </CorporateCardContent>
      </CorporateCard>

      {/* Alerts Section */}
      <div className="space-y-4">
        <CorporateAlert variant="info">
          <strong>Bilgi:</strong> Sistem bakımı 15 Ocak 2024 saat 02:00-04:00 arasında yapılacaktır.
        </CorporateAlert>
        
        <CorporateAlert variant="success">
          <strong>Başarılı:</strong> Son 24 saatte 47 yeni bağış kaydı oluşturuldu.
        </CorporateAlert>
      </div>

      {/* Empty State Example */}
      {false && (
        <CorporateCard>
          <CorporateEmptyState
            icon={<Package className="w-16 h-16" />}
            title="Henüz bağış kaydı yok"
            description="İlk bağış kaydınızı oluşturmak için aşağıdaki butona tıklayın."
            action={
              <CorporateButton variant="primary">
                <Plus className="w-4 h-4 mr-1" />
                İlk Bağış Kaydı
              </CorporateButton>
            }
          />
        </CorporateCard>
      )}

      {/* Modal Example */}
      <CorporateModal isOpen={showModal} onClose={() => setShowModal(false)}>
        <CorporateModalHeader onClose={() => setShowModal(false)}>
          <CorporateModalTitle>Tüm Bağışlar</CorporateModalTitle>
        </CorporateModalHeader>
        <CorporateModalBody>
          <p className="text-neutral-600 mb-4">
            Bu modal tüm bağış kayıtlarını gösterecek ve detaylı filtreleme seçenekleri sunacak.
          </p>
          <CorporateTable>
            <CorporateTableHeader>
              <tr>
                <CorporateTableHeaderCell>Bağışçı</CorporateTableHeaderCell>
                <CorporateTableHeaderCell>Tutar</CorporateTableHeaderCell>
                <CorporateTableHeaderCell>Durum</CorporateTableHeaderCell>
              </tr>
            </CorporateTableHeader>
            <tbody>
              {mockRecentDonations.slice(0, 3).map((donation) => (
                <CorporateTableRow key={donation.id}>
                  <CorporateTableCell>{donation.donor}</CorporateTableCell>
                  <CorporateTableCell>{donation.amount}</CorporateTableCell>
                  <CorporateTableCell>
                    {getStatusBadge(donation.status)}
                  </CorporateTableCell>
                </CorporateTableRow>
              ))}
            </tbody>
          </CorporateTable>
        </CorporateModalBody>
        <CorporateModalFooter>
          <CorporateButton variant="secondary" onClick={() => setShowModal(false)}>
            İptal
          </CorporateButton>
          <CorporateButton variant="primary">
            <Download className="w-4 h-4 mr-1" />
            Dışa Aktar
          </CorporateButton>
        </CorporateModalFooter>
      </CorporateModal>
    </div>
  )
}
